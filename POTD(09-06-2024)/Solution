class Solution:
    def subarraysDivByK(self, nums: List[int], k: int) -> int:
        remainder_counter = {0: 1}  # Initialize the counter with 0 remainder
        total_subarrays = 0
        current_sum = 0

        for num in nums:
            current_sum += num
            remainder = current_sum % k
            remainder = remainder + k if remainder < 0 else remainder  # Handle negative remainders

            # If the current remainder exists in the counter,
            # it means we have seen this remainder before
            # and can form a subarray with sum divisible by k
            total_subarrays += remainder_counter.get(remainder, 0)

            # Update the counter for the current remainder
            remainder_counter[remainder] = remainder_counter.get(remainder, 0) + 1

        return total_subarrays
