from collections import defaultdict

class Solution:
    def subarraysWithKDistinct(self, nums: List[int], k: int) -> int:
        def atMostK(nums, k):
            count = defaultdict(int)
            left = 0
            result = 0
            
            for right in range(len(nums)):
                count[nums[right]] += 1
                
                while len(count) > k:
                    count[nums[left]] -= 1
                    if count[nums[left]] == 0:
                        del count[nums[left]]
                    left += 1
                
                result += right - left + 1
                
            return result
        
        return atMostK(nums, k) - atMostK(nums, k - 1)


# Time complexity : O(h)
# Space complexity : O(1)
