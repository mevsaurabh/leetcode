class Solution:
    def maxProfitAssignment(self, difficulty: List[int], profit: List[int], worker: List[int]) -> int:
        res = 0
        maxProfit = []
        works =  [(d, p) for d, p in zip(difficulty, profit)]
        heapq.heapify(works)
        worker.sort()
        k = len(worker)

        for i in range(k):
            while works and works[0][0] <= worker[i]:
                d, p = heapq.heappop(works)
                heapq.heappush(maxProfit, -p)
            if not maxProfit:
                continue
            x = heapq.heappop(maxProfit)
            heapq.heappush(maxProfit, x)      
            res += -x

        return res 
